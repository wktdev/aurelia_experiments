{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","components/work-form/work-form.js","C:/Users/william/Desktop/aurelia_experiments/invoice/src/app.html","C:/Users/william/Desktop/aurelia_experiments/invoice/src/components/work-form/work-form.html"],"names":["App","numberOfFields","counter","form","date","item","payRate","hours","payTotal","formList","addWorkForm","push","console","log","getDateTimeSpan","setAllPayRate","setAllHours","setAllItem","addMultipleWorkForms","num","i","setFieldData","index","val","setFieldPayRate","setHours","calculatePayTotal","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","WorkForm"],"mappings":";;;;;;;;;;;;;MACaA,cAAAA;AACX,mBAAc;AAAA;;AACb,WAAKC,cAAL,GAAsB,CAAtB;AACA,WAAKC,OAAL,GAAe,CAAf;AACA,WAAKC,IAAL,GAAY,EAACC,MAAK,EAAN,EAAUC,MAAK,EAAf,EAAmBC,SAAQ,CAA3B,EAA8BC,OAAM,CAApC,EAAuCC,UAAS,CAAhD,EAAZ,EACA,KAAKC,QAAL,GAAe,EADf;AAIA;;kBAECC,qCAAa;AACb,WAAKD,QAAL,CAAcE,IAAd,CAAmB,KAAKR,IAAxB;AACAS,cAAQC,GAAR,CAAY,KAAKJ,QAAjB;AACD;;kBAKDK,6CAAiB,CAEhB;;kBAEDC,yCAAe,CAEd;;kBAEDC,qCAAa,CAEZ;;kBAEDC,mCAAY,CAEX;;kBAEDC,qDAAqBC,KAAI;AACvB,WAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAID,GAAnB,EAAwBC,KAAG,CAA3B,EAA6B;AAC3B,aAAKV,WAAL;AACD;AACF;;kBAQDW,qCAAaC,OAAMC,KAAI;AACrB,WAAKd,QAAL,CAAca,KAAd,EAAqBlB,IAArB,GAA4BmB,GAA5B;AAED;;kBACDC,2CAAgBF,OAAMC,KAAI;AAC1B,WAAKd,QAAL,CAAca,KAAd,EAAqBhB,OAArB,GAA+BiB,GAA/B;AAEC;;kBAEDE,6BAASH,OAAMC,KAAI;AACnB,WAAKd,QAAL,CAAca,KAAd,EAAqBf,KAArB,GAA6BgB,GAA7B;AACC;;kBAEDG,+CAAkBJ,OAAMC,KAAI;AACxB,UAAIjB,UAAU,KAAKG,QAAL,CAAca,KAAd,EAAqBhB,OAAnC;AACA,UAAIC,QAAQ,KAAKE,QAAL,CAAca,KAAd,EAAqBf,KAAjC;AACA,WAAKE,QAAL,CAAca,KAAd,EAAqBd,QAArB,GAAgCF,UAAUC,KAA1C;AACH;;;;;;;;;;;oBChEY;AACboB,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBed,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;KCFYa,mBAAAA,WACZ,oBAAa;AAAA;AAEZ;;ACHF;ACAA","file":"app-bundle.js","sourcesContent":["\r\nexport class App {\r\n  constructor() {\r\n  \tthis.numberOfFields = 0;\r\n  \tthis.counter = 0;\r\n  \tthis.form = {date:\"\", item:\"\", payRate:0, hours:0, payTotal:0 },\r\n  \tthis.formList =[];\r\n\r\n\r\n  }\r\n\r\n    addWorkForm(){\r\n    this.formList.push(this.form);\r\n    console.log(this.formList);\r\n  }\r\n\r\n\r\n  //__________________________________________BEGIN batch set work fields\r\n\r\n  getDateTimeSpan(){\r\n\r\n  }\r\n\r\n  setAllPayRate(){\r\n\r\n  }\r\n\r\n  setAllHours(){\r\n\r\n  }\r\n\r\n  setAllItem(){\r\n\r\n  }\r\n\r\n  addMultipleWorkForms(num){\r\n    for(var i = 0; i < num; i+=1){\r\n      this.addWorkForm()\r\n    }\r\n  }\r\n\r\n\r\n  //__________________________________________END batch set work fields\r\n\r\n  //__________________________________________BEGIN set individual work fields\r\n\r\n\r\n  setFieldData(index,val){\r\n    this.formList[index].date = val;\r\n\r\n  }\r\n  setFieldPayRate(index,val){\r\n  this.formList[index].payRate = val;\r\n\r\n  }\r\n\r\n  setHours(index,val){\r\n  this.formList[index].hours = val;\r\n  }\r\n\r\n  calculatePayTotal(index,val){\r\n      var payRate = this.formList[index].payRate;\r\n      var hours = this.formList[index].hours;\r\n      this.formList[index].payTotal = payRate * hours;\r\n  }\r\n\r\n\r\n//_____________________________________________END set individual work fields\r\n\r\n}\r\n\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class WorkForm{\r\n\tconstructor(){\r\n\t\t\r\n\t}\r\n}",null,null],"sourceRoot":"../src"}